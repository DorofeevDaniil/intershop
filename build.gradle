plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'ru.custom'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.hibernate:hibernate-core:7.0.4.Final'
	implementation 'org.liquibase:liquibase-core:4.32.0'

	compileOnly 'org.projectlombok:lombok:1.18.32'
	annotationProcessor 'org.projectlombok:lombok:1.18.32'

	runtimeOnly 'com.mysql:mysql-connector-j'
	runtimeOnly 'org.postgresql:postgresql'
	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.register('generateReadme') {
	def versionName = project.version
	def appName = project.name
	def jarName = "${rootProject.name}-${version}.jar"

	doLast {
		def readmeContent = """# Приложение ${appName} 
## Версия: ${versionName}
Приложение представляет из себя полукастомный полумагазин, разработанный в рамках проектной рабты.
Приложение предоставляет возможность просмотра товаров, формирования корзины, оформления заказ, а также загрузки новых товаров из условного интерфейса администратора.


## Сборка
Для сбоки необходимо в корне проекта выполнить команду    `./gradlew clean bootJar`

После этого jar-файл будет собран и расположен по пути `./build/libs`

## Запуск
### Unix-подобные системы
#### Запуск
Выполнить команду `./build/libs/${jarName} start`

#### Остановка
Выполнить команду `./build/libs/${jarName} stop`

### Windows
#### Запуск
Выполнить команду `./build/libs/start.bat` (либо вручную открыть файл)

> [!WARNING]
> Можно также запустить напрямую исполняемый jar-файл командой `./build/libs/${jarName}`,
но остановка будет возможна только последовательным выполнением команд
> 1. `jps -lv | findstr /i intershop`
> 2. `taskkill /PID <PID> /f`

#### Остановка
Выполнить команду `./build/libs/stop.bat` (либо вручную открыть файл)

### Docker
#### Запуск
В дирректории проекта выполнить команду `docker-compose up`

#### Остановка
В дирректории проекта выполнить команду `docker-compose stop`

### Из исходного кода
#### Windows
Выполнить команды 

    \$env:DB_HOST="<DB_HOST>"
    \$env:DB_PORT="<DB_PORT>"
    \$env:DB_NAME="<DB_NAME>"
    \$env:POSTGRES_USER="<POSTGRES_USER>"
    \$env:POSTGRES_PASSWORD="<POSTGRES_PASSWORD>"
    ./gradlew bootRun

#### Unix-подобные системы

    export DB_HOST=<DB_HOST>
    export DB_PORT=<DB_PORT>
    export DB_NAME=<DB_NAME>
    export POSTGRES_USER=<POSTGRES_USER>
    export POSTGRES_PASSWORD=<POSTGRES_PASSWORD>
    ./gradlew bootRun

### В Intellij IDEA
Открыть Run/Debug Configurations, добавить в конфигурацию запуска Environment variables с актуальным для запускаемой конфигурации содержимым
`DB_HOST=<DB_HOST>;DB_PORT=<DB_PORT>;DB_NAME=<DB_NAME>;POSTGRES_USER=<POSTGRES_USER>;POSTGRES_PASSWORD=<POSTGRES_PASSWORD>`

> [!NOTE]
>После запуска любым из вышеописанных способов приложение будет доступно по адресу http://localhost:9191/intershop

### Тестирование
Для запуска тестов необходимо выполнить команду `./gradlew test`


## Загрузка товаров
Для загрузки новых товаров в базу необходимо перейти по ссылке http://localhost:9191/intershop/admin"""
		file("README.md").text = readmeContent
	}
}
