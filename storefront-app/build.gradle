buildscript {
    dependencies {
        classpath "org.openapitools:openapi-generator-gradle-plugin:7.8.0"
    }
}

import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

plugins {
    id 'org.openapi.generator' version '7.8.0'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.4.2'
    implementation 'jakarta.validation:jakarta.validation-api:3.1.1'
    implementation 'io.swagger.core.v3:swagger-annotations:2.2.28'
    implementation 'org.liquibase:liquibase-core:4.32.0'
    implementation 'org.postgresql:postgresql:42.7.3'
    implementation 'org.thymeleaf:thymeleaf-spring6'
    implementation 'org.springframework:spring-tx'

    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'

    runtimeOnly 'org.postgresql:r2dbc-postgresql:1.0.2.RELEASE'

    testImplementation 'org.jsoup:jsoup:1.17.2'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'com.github.codemonstur:embedded-redis:1.4.3'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'com.vaadin.external.google', module: 'android-json'
    }

    testImplementation('com.github.codemonstur:embedded-redis:1.4.3') {
        exclude group: 'org.json', module: 'json'
    }

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testRuntimeOnly "io.r2dbc:r2dbc-h2"
}

tasks.register('buildClient', GenerateTask) {
    generatorName.set("java")
    inputSpec.set("$projectDir/src/main/resources/api-spec.yaml")
    outputDir.set("$projectDir/build/generated")
    ignoreFileOverride.set(".openapi-generator-java-sources.ignore")
    modelPackage.set("ru.custom.paymentservice.domain")
    invokerPackage.set("ru.custom.paymentservice")
    apiPackage.set("ru.custom.paymentservice.api")
    configOptions.set([
            hideGenerationTimestamp: "true",
            library                : "webclient",
            useJakartaEe           : "true",
            useTags                : "true",
            openApiNullable        : "false",
            serializableModel      : "true"
    ])
}

sourceSets.main.java.srcDir "$projectDir/build/generated/src/main/java"

tasks.named('compileJava') {
    dependsOn(tasks.buildClient)
}

bootJar.finalizedBy('generateBatScripts')

tasks.register('generateBatScripts') {
    dependsOn bootJar
    doLast {
        def outputDir = "${buildDir}/libs"
        def jarName = "${project.name}-${version}.jar"

        // Стартовый скрипт
        def startFile = new File(outputDir, "start.bat")
        startFile.text = """@echo off
setlocal
if "%~9"=="" (
    echo Usage: start.bat DB_HOST DB_PORT DB_NAME POSTGRES_USER POSTGRES_PASSWORD REDIS_HOST REDIS_PORT PAYMENT_SERVICE_HOST PAYMENT_SERVICE_PORT
    echo Example: start.bat localhost 5432 postgres root root 127.0.0.1 6379 localhost 8080
    exit /b 1
)

set "DB_HOST=%~1"
set "DB_PORT=%~2"
set "DB_NAME=%~3"
set "POSTGRES_USER=%~4"
set "POSTGRES_PASSWORD=%~5"
set "REDIS_HOST=%~6"
set "REDIS_PORT=%~7"
set "PAYMENT_SERVICE_HOST=%~8"
set "PAYMENT_SERVICE_PORT=%~9"

echo Starting application...

set DB_HOST=%DB_HOST%
set DB_PORT=%DB_PORT%
set DB_NAME=%DB_NAME%
set POSTGRES_USER=%POSTGRES_USER%
set POSTGRES_PASSWORD=%POSTGRES_PASSWORD%
set REDIS_HOST=%REDIS_HOST%
set REDIS_PORT=%REDIS_PORT%
set PAYMENT_SERVICE_HOST=%PAYMENT_SERVICE_HOST%
set PAYMENT_SERVICE_PORT=%PAYMENT_SERVICE_PORT%

set JAR_NAME=${jarName}

echo Starting %JAR_NAME%...

start "storefront-app" java -jar "%~dp0%JAR_NAME%"
timeout /t 5 > nul

for /f "tokens=1,*" %%a in ('jps -lv ^| findstr /i "%JAR_NAME%"') do (
    echo %%a > "%~dp0app.pid"
    echo Application started with PID %%a
    goto end
)

echo Failed to find running application matching %JAR_NAME%

:end
endlocal
"""

        // Скрипт остановки
        def stopFile = new File(outputDir, "stop.bat")
        stopFile.text = """@echo off
setlocal

set "PID_FILE=%~dp0app.pid"

if exist "%PID_FILE%" (
    for /f "usebackq delims=" %%p in ("%PID_FILE%") do (
        set "PID=%%p"
        goto readDone
    )
    echo Could not read PID from file.
    goto end
) else (
    echo No PID file found. Is the application ${jarName} running?
    goto end
)

:readDone
echo Stopping application ${jarName} with PID [%PID%]
taskkill /PID %PID% /F
del "%PID_FILE%"
echo Application stopped.

:end
endlocal
"""
        println "Bat-scripts created: start.bat and stop.bat in ${outputDir}"
    }
}

tasks.register('generateReadme') {
    def versionName = project.version
    def appName = project.name
    def jarName = "${project.name}-${version}.jar"

    doLast {
        def readmeContent = """# Приложение ${appName}
## Версия: ${versionName}
Модуль, разработанный в рамках проектной рабты представляет из себя Витрину интернет-магазина.
Приложение предоставляет возможность просмотра товаров, формирования корзины, оформления заказ, а также загрузки новых товаров из условного интерфейса администратора.

## Генерация README.md
Для генерации README.md необходимо выполнить команду `./gradlew generateReadme`

## Сборка
Для сбоки необходимо в корне проекта выполнить команду    `./gradlew clean bootJar`

После этого jar-файл будет собран и расположен по пути `./build/libs`

## Запуск
### Unix-подобные системы
#### Запуск
Выполнить команду `./build/libs/${jarName} start`

#### Остановка
Выполнить команду `./build/libs/${jarName} stop`

### Windows
#### Запуск
Выполнить команду `./build/libs/start.bat start.bat <DB_HOST> <DB_PORT> <DB_NAME> <POSTGRES_USER> <POSTGRES_PASSWORD> <REDIS_HOST> <REDIS_PORT> <PAYMENT_SERVICE_HOST> <PAYMENT_SERVICE_PORT>`

> [!WARNING]
> Можно также запустить напрямую исполняемый jar-файл командой `./build/libs/${jarName}`, предварительно задав переменные среды
> 1.  `\$env:DB_HOST="<DB_HOST>"`
> 2.  `\$env:DB_PORT="<DB_PORT>"`
> 3.  `\$env:DB_NAME="<DB_NAME>"`
> 4.  `\$env:POSTGRES_USER="<POSTGRES_USER>"`
> 5.  `\$env:POSTGRES_PASSWORD="<POSTGRES_PASSWORD>"`
> 6.  `\$env:REDIS_HOST="<REDIS_HOST>"`
> 7.  `\$env:REDIS_PORT="<REDIS_PORT>"`
> 8.  `\$env:PAYMENT_SERVICE_HOST="<PAYMENT_SERVICE_HOST>"`
> 9.  `\$env:PAYMENT_SERVICE_PORT="<PAYMENT_SERVICE_PORT>"`
>
> Однако остановка будет возможна только последовательным выполнением команд
> 1. `jps -lv | findstr /i ${appName}`
> 2. `taskkill /PID <PID> /f`

#### Остановка
Выполнить команду `./build/libs/stop.bat` (либо вручную открыть файл)

### Docker
#### Запуск
В дирректории проекта выполнить команду `docker-compose up`

#### Остановка
В дирректории проекта выполнить команду `docker-compose stop`

### Из исходного кода
#### Windows
Выполнить команды

    \$env:DB_HOST="<DB_HOST>"
    \$env:DB_PORT="<DB_PORT>"
    \$env:DB_NAME="<DB_NAME>"
    \$env:POSTGRES_USER="<POSTGRES_USER>"
    \$env:POSTGRES_PASSWORD="<POSTGRES_PASSWORD>"
    \$env:REDIS_HOST="<REDIS_HOST>"
	\$env:REDIS_PORT="<REDIS_PORT>"
	\$env:PAYMENT_SERVICE_HOST="<PAYMENT_SERVICE_HOST>"
    \$env:PAYMENT_SERVICE_PORT="<PAYMENT_SERVICE_PORT>"
    ./gradlew :${appName}:bootRun

#### Unix-подобные системы

    export DB_HOST=<DB_HOST>
    export DB_PORT=<DB_PORT>
    export DB_NAME=<DB_NAME>
    export POSTGRES_USER=<POSTGRES_USER>
    export POSTGRES_PASSWORD=<POSTGRES_PASSWORD>
    export REDIS_HOST=<REDIS_HOST>
    export REDIS_PORT=<REDIS_PORT>
    export PAYMENT_SERVICE_HOST=<PAYMENT_SERVICE_HOST>
    export PAYMENT_SERVICE_PORT=<PAYMENT_SERVICE_PORT>
    ./gradlew :${appName}:bootRun

### В Intellij IDEA
Открыть Run/Debug Configurations, добавить в конфигурацию запуска Environment variables с актуальным для запускаемой конфигурации содержимым
`DB_HOST=<DB_HOST>;DB_PORT=<DB_PORT>;DB_NAME=<DB_NAME>;POSTGRES_USER=<POSTGRES_USER>;POSTGRES_PASSWORD=<POSTGRES_PASSWORD>;REDIS_HOST=<REDIS_HOST>;REDIS_PORT=<REDIS_PORT>;PAYMENT_SERVICE_HOST=<PAYMENT_SERVICE_HOST>;PAYMENT_SERVICE_PORT=<PAYMENT_SERVICE_PORT>`

> [!NOTE]
>После запуска любым из вышеописанных способов приложение будет доступно по адресу http://localhost:9191/intershop

### Тестирование
Для запуска тестов необходимо выполнить команду `./gradlew test`


## Загрузка товаров
Для загрузки новых товаров в базу необходимо перейти по ссылке http://localhost:9191/intershop/admin"""
        file("README.md").text = readmeContent
    }
}